package (
    isPrimitive
    isSimple
    isTruthy
    
    isBlockFunction
    isLambda)
{

/**
 * 
 */
isPrimitive = \node ->
    node.type === 'Literal' && (
        node.kind === 'string'
        || node.kind === 'number'
        || node.kind === 'boolean'
        || node.kind === 'null');

/**
 * 
 */
isSimple = \node ->
    (  isPrimitive node 
    || node.type === 'ArrayExpression'
    || node.type === 'ObjectExpression');

/**
 * 
 */
isTruthy = \node ->
    (  isPrimitive node
    && !!node.value);

/**
 * 
 */
isBlockFunction = \node ->
    (  node.type === 'FunctionExpression'
    && node.body.type === 'BlockStatement');

/**
 * 
 */
isLambda = \node ->
    (  node.type === 'FunctionExpression'
    && !node.id
    && !isBlockFunction node
    && !node.params.self
    && !node.params.id);


}